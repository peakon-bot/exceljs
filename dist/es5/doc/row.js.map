{"version":3,"sources":["../../../lib/doc/row.js"],"names":["_","require","Enums","colCache","Cell","Row","module","exports","worksheet","number","_worksheet","_number","_cells","style","outlineLevel","prototype","commit","_commitRow","destroy","findCell","colNumber","getCellEx","address","cell","col","column","getColumn","getCell","getColumnKey","l2n","encodeAddress","row","splice","start","count","inserts","Array","slice","call","arguments","nKeep","nExpand","length","nEnd","i","cSrc","cDst","value","undefined","eachCell","options","iteratee","includeEmpty","n","forEach","index","type","ValueType","Null","values","offset","hasOwnProperty","item","eachColumnKey","key","hasValues","some","cellCount","actualCellCount","dimensions","min","max","_applyStyle","name","numFmt","font","alignment","border","fill","hidden","_hidden","_outlineLevel","collapsed","properties","outlineLevelRow","model","cells","cellModel","push","height","Error","previousAddress","Types","Merge","decodeAddress","$col$row","n2l"],"mappings":"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","file":"row.js","sourcesContent":["/**\n * Copyright (c) 2014-2017 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar _ = require('../utils/under-dash');\n\nvar Enums = require('./enums');\nvar colCache = require('./../utils/col-cache');\nvar Cell = require('./cell');\n\nvar Row = module.exports = function(worksheet, number) {\n  this._worksheet = worksheet;\n  this._number = number;\n  this._cells = [];\n  this.style = {};\n  this.outlineLevel = 0;\n};\n\nRow.prototype = {\n  // return the row number\n  get number() {\n    return this._number;\n  },\n\n  get worksheet() {\n    return this._worksheet;\n  },\n\n  // Inform Streaming Writer that this row (and all rows before it) are complete\n  // and ready to write. Has no effect on Worksheet document\n  commit: function() {\n    this._worksheet._commitRow(this); // eslint-disable-line no-underscore-dangle\n  },\n\n  // helps GC by breaking cyclic references\n  destroy: function() {\n    delete this._worksheet;\n    delete this._cells;\n    delete this.style;\n  },\n\n  findCell: function(colNumber) {\n    return this._cells[colNumber - 1];\n  },\n\n  // given {address, row, col}, find or create new cell\n  getCellEx: function(address) {\n    var cell = this._cells[address.col - 1];\n    if (!cell) {\n      var column = this._worksheet.getColumn(address.col);\n      cell = new Cell(this, column, address.address);\n      this._cells[address.col - 1] = cell;\n    }\n    return cell;\n  },\n\n  // get cell by key, letter or column number\n  getCell: function(col) {\n    if (typeof col === 'string') {\n      // is it a key?\n      var column = this._worksheet.getColumnKey(col);\n      if (column) {\n        col = column.number;\n      } else {\n        col = colCache.l2n(col);\n      }\n    }\n    return this._cells[col - 1] ||\n      this.getCellEx({\n        address: colCache.encodeAddress(this._number, col),\n        row: this._number,\n        col: col\n      });\n  },\n\n  // remove cell(s) and shift all higher cells down by count\n  splice: function(start, count) {\n    var inserts = Array.prototype.slice.call(arguments, 2);\n    var nKeep = start + count;\n    var nExpand = inserts.length - count;\n    var nEnd = this._cells.length;\n    var i, cSrc, cDst;\n    if (nExpand < 0) {\n      // remove cells\n      for (i = nKeep; i <= nEnd; i++) {\n        cSrc = this._cells[i - 1];\n        if (cSrc) {\n          this.getCell(i + nExpand).value = cSrc.value;\n          cSrc.value = null;\n        } else {\n          cDst = this._cells[(i + nExpand) - 1];\n          if (cDst) {\n            cDst.value = null;\n          }\n        }\n      }\n    } else if (nExpand > 0) {\n      // insert new cells\n      for (i = nEnd; i >= nKeep; i--) {\n        cSrc = this._cells[i - 1];\n        if (cSrc) {\n          this.getCell(i + nExpand).value = cSrc.value;\n        } else {\n          this._cells[(i + nExpand) - 1] = undefined;\n        }\n      }\n    }\n\n    // now add the new values\n    for (i = 0; i < inserts.length; i++) {\n      this.getCell(start + i).value = inserts[i];\n    }\n  },\n\n  // Iterate over all non-null cells in this row\n  eachCell: function(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = null;\n    }\n    if (options && options.includeEmpty) {\n      var n = this._cells.length;\n      for (var i = 1; i <= n; i++) {\n        iteratee(this.getCell(i), i);\n      }\n    } else {\n      this._cells.forEach(function(cell, index) {\n        if (cell && (cell.type !== Enums.ValueType.Null)) {\n          iteratee(cell, index + 1);\n        }\n      });\n    }\n  },\n\n  // return a sparse array of cell values\n  get values() {\n    var values = [];\n    this._cells.forEach(function(cell) {\n      if (cell && (cell.type !== Enums.ValueType.Null)) {\n        values[cell.col] = cell.value;\n      }\n    });\n    return values;\n  },\n\n  // set the values by contiguous or sparse array, or by key'd object literal\n  set values(value) {\n    // this operation is not additive - any prior cells are removed\n    this._cells = [];\n    if (!value) {\n      // empty row\n    } else if (value instanceof Array) {\n      var offset = 0;\n      if (value.hasOwnProperty('0')) {\n        // contiguous array - start at column 1\n        offset = 1;\n      }\n      value.forEach((item, index) => {\n        if (item !== undefined) {\n          this.getCellEx({\n            address: colCache.encodeAddress(this._number, index + offset),\n            row: this._number,\n            col: index + offset\n          }).value = item;\n        }\n      });\n    } else {\n      // assume object with column keys\n      this._worksheet.eachColumnKey((column, key) => {\n        if (value[key] !== undefined) {\n          this.getCellEx({\n            address: colCache.encodeAddress(this._number, column.number),\n            row: this._number,\n            col: column.number\n          }).value = value[key];\n        }\n      });\n    }\n  },\n\n  // returns true if the row includes at least one cell with a value\n  get hasValues() {\n    return _.some(this._cells, function(cell) {\n      return cell && (cell.type !== Enums.ValueType.Null);\n    });\n  },\n\n  get cellCount() {\n    return this._cells.length;\n  },\n  get actualCellCount() {\n    var count = 0;\n    this.eachCell(function() {\n      count++;\n    });\n    return count;\n  },\n\n  // get the min and max column number for the non-null cells in this row or null\n  get dimensions() {\n    var min = 0;\n    var max = 0;\n    this._cells.forEach(function(cell) {\n      if (cell && (cell.type !== Enums.ValueType.Null)) {\n        if (!min || (min > cell.col)) {\n          min = cell.col;\n        }\n        if (max < cell.col) {\n          max = cell.col;\n        }\n      }\n    });\n    return min > 0 ? {\n      min: min,\n      max: max\n    } : null;\n  },\n\n  // =========================================================================\n  // styles\n  _applyStyle: function(name, value) {\n    this.style[name] = value;\n    this._cells.forEach(function(cell) {\n      if (cell) { cell[name] = value; }\n    });\n    return value;\n  },\n\n  get numFmt() {\n    return this.style.numFmt;\n  },\n  set numFmt(value) {\n    this._applyStyle('numFmt', value);\n  },\n  get font() {\n    return this.style.font;\n  },\n  set font(value) {\n    this._applyStyle('font', value);\n  },\n  get alignment() {\n    return this.style.alignment;\n  },\n  set alignment(value) {\n    this._applyStyle('alignment', value);\n  },\n  get border() {\n    return this.style.border;\n  },\n  set border(value) {\n    this._applyStyle('border', value);\n  },\n  get fill() {\n    return this.style.fill;\n  },\n  set fill(value) {\n    this._applyStyle('fill', value);\n  },\n\n  get hidden() {\n    return !!this._hidden;\n  },\n  set hidden(value) {\n    this._hidden = value;\n  },\n\n  get outlineLevel() {\n    return this._outlineLevel || 0;\n  },\n  set outlineLevel(value) {\n    this._outlineLevel = value;\n  },\n  get collapsed() {\n    return !!(this._outlineLevel && (this._outlineLevel >= this._worksheet.properties.outlineLevelRow));\n  },\n\n  // =========================================================================\n  get model() {\n    var cells = [];\n    var min = 0;\n    var max = 0;\n    this._cells.forEach(function(cell) {\n      if (cell) {\n        var cellModel = cell.model;\n        if (cellModel) {\n          if (!min || (min > cell.col)) {\n            min = cell.col;\n          }\n          if (max < cell.col) {\n            max = cell.col;\n          }\n          cells.push(cellModel);\n        }\n      }\n    });\n\n    return (this.height || cells.length) ? {\n      cells: cells,\n      number: this.number,\n      min: min,\n      max: max,\n      height: this.height,\n      style: this.style,\n      hidden: this.hidden,\n      outlineLevel: this.outlineLevel,\n      collapsed: this.collapsed\n    } : null;\n  },\n  set model(value) {\n    if (value.number !== this._number) {\n      throw new Error('Invalid row number in model');\n    }\n    this._cells = [];\n    var previousAddress;\n    value.cells.forEach(cellModel => {\n      switch (cellModel.type) {\n        case Cell.Types.Merge:\n          // special case - don't add this types\n          break;\n        default:\n          var address;\n          if (cellModel.address) {\n            address = colCache.decodeAddress(cellModel.address);\n          } else if (previousAddress) {\n            // This is a <c> element without an r attribute\n            // Assume that it's the cell for the next column\n            var row = previousAddress.row;\n            var col = previousAddress.col + 1;\n            address = {\n              row: row,\n              col: col,\n              address: colCache.encodeAddress(row, col),\n              $col$row: '$' + colCache.n2l(col) + '$' + row\n            };\n          }\n          previousAddress = address;\n          var cell = this.getCellEx(address);\n          cell.model = cellModel;\n          break;\n      }\n    });\n\n    if (value.height) {\n      this.height = value.height;\n    } else {\n      delete this.height;\n    }\n\n    this.hidden = value.hidden;\n    this.outlineLevel = value.outlineLevel || 0;\n\n    this.style = value.style || {};\n  }\n};\n"]}